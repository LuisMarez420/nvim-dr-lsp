*dr-lsp.txt*           For NVIM v0.8.0           Last change: 2023 November 06

==============================================================================
Table of Contents                                   *dr-lsp-table-of-contents*

1. nvim-dr-lsp                                            |dr-lsp-nvim-dr-lsp|
  - Statusline Components           |dr-lsp-nvim-dr-lsp-statusline-components|
  - Installation                             |dr-lsp-nvim-dr-lsp-installation|
  - Highlights of definition and references|dr-lsp-nvim-dr-lsp-highlights-of-definition-and-references|
  - Customizing the components |dr-lsp-nvim-dr-lsp-customizing-the-components|
  - SimilarPlugins                         |dr-lsp-nvim-dr-lsp-similarplugins|
  - Credits                                       |dr-lsp-nvim-dr-lsp-credits|

==============================================================================
1. nvim-dr-lsp                                            *dr-lsp-nvim-dr-lsp*



`D`efinitions and `R`eferences utility for the LSP.

Lightweight plugin that highlights definitions and references of the word under
the cursor and displays their count in the statusline.

- |dr-lsp-statusline-components|
    - |dr-lsp-`lspcount`|
    - |dr-lsp-`lspprogress`|
- |dr-lsp-installation|
- |dr-lsp-highlights-of-definition-and-references|
- |dr-lsp-customizing-the-components|
- |dr-lsp-similar-plugins|
- |dr-lsp-credits|


STATUSLINE COMPONENTS               *dr-lsp-nvim-dr-lsp-statusline-components*


LSPCOUNT ~

**Definitions and references inside current buffer**

>text
    LSP: 2D 6R
<

**Definitions or references outside current buffer**

>text
    LSP: 1(2)D 4(10)R
<

- 1 definition in the current buffer
- 2 definitions in the workspace
- 4 references in the current buffer
- 10 definitions in the workspace


LSPPROGRESS ~

- LSP activity spinner, similar to
    fidget.nvim <https://github.com/j-hui/fidget.nvim>, but less obtrusive.
- Ignores `null-ls` and `none-ls`.


INSTALLATION                                 *dr-lsp-nvim-dr-lsp-installation*

>lua
    -- lazy.nvim
    { "chrisgrieser/nvim-dr-lsp" },
    
    -- packer
    use { "chrisgrieser/nvim-dr-lsp" }
<

>lua
    -- adding the components to lualine.nvim
    {
        sections = {
            lualine_c = {
                { require("dr-lsp").lspCount },
                { require("dr-lsp").lspProgress },
            },
        }
    }
<

There is no `.setup` call for this plugin. Just add the components to your
statusline.


HIGHLIGHTS OF DEFINITION AND REFERENCES*dr-lsp-nvim-dr-lsp-highlights-of-definition-and-references*

- Definitions are under-dashed, references are under-dotted.
- These are set up automatically for you as soon as the buffer is attached to an
    LSP client.
- To disable the highlights feature, set `vim.g.dr_lsp_no_highlight = true`
    before loading the plugin.


CUSTOMIZING THE COMPONENTS     *dr-lsp-nvim-dr-lsp-customizing-the-components*

There are no built-in options to format the components, since formatting can
already be done with most statusline plugins. With Lualine, for example, you
can use the `fmt` option
<https://github.com/nvim-lualine/lualine.nvim#global-options>

>lua
    lualine_c = {
        { 
            require("dr-lsp").lspCount, 
            -- remove the letters from the component
            fmt = function(str) return str:gsub("[RD]", "") end,
        },
    },
<


SIMILARPLUGINS                             *dr-lsp-nvim-dr-lsp-similarplugins*

- LSP-Lens <https://github.com/VidocqH/lsp-lens.nvim>
- Fidget.nvim <https://github.com/j-hui/fidget.nvim>
- action-hints.nvim <https://github.com/roobert/action-hints.nvim>
- symbol-usage.nvim <https://github.com/Wansmer/symbol-usage.nvim>


CREDITS                                           *dr-lsp-nvim-dr-lsp-credits*

Basic idea for the progress component from folke
<https://www.reddit.com/r/neovim/comments/o4bguk/comment/h2kcjxa/>. **About
Me** In my day job, I am a sociologist studying the social mechanisms
underlying the digital economy. For my PhD project, I investigate the
governance of the app economy and how software ecosystems manage the tension
between innovation and compatibility. If you are interested in this subject,
feel free to get in touch.

**Profiles** - reddit <https://www.reddit.com/user/pseudometapseudo> - Discord
<https://discordapp.com/users/462774483044794368/> - Academic Website
<https://chris-grieser.de/> - Twitter <https://twitter.com/pseudo_meta> -
Mastodon <https://pkm.social/@pseudometa> - ResearchGate
<https://www.researchgate.net/profile/Christopher-Grieser> - LinkedIn
<https://www.linkedin.com/in/christopher-grieser-ba693b17a/>



==============================================================================
2. Links                                                        *dr-lsp-links*

1. *Showcase*: https://github.com/chrisgrieser/nvim-dr-lsp/assets/73286100/8c6600c8-b16d-434f-8bdb-47b4a9dab7cb

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
